{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["AboutPage","_ref","data","post","allMarkdownRemark","edges","node","html","_len","arguments","length","props","Array","_key","console","log","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","title","_components_seo__WEBPACK_IMPORTED_MODULE_5__","frontmatter","description","excerpt","className","dangerouslySetInnerHTML","__html","__webpack_exports__","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","Object","assign","_public_static_d_3928906166_json__WEBPACK_IMPORTED_MODULE_1__","m","module","exports","require","default","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","Layout","path","window","pathname","homeClassName","aboutClassName","match","_React$useState","useState","toggleNav","setToggleNav","react__WEBPACK_IMPORTED_MODULE_1___default","href","onClick","aria-label","role","aria-controls","id","class","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","target","rel","Date","getFullYear","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","shape","SEO","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-about-js-a5013122fe809b819904.js","sourcesContent":["import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n\nconst AboutPage = ({ data }, ...props) => {\n  const post = data.allMarkdownRemark.edges[0].node\n  const html = data.allMarkdownRemark.edges[0].node.html\n  console.log(data, props)\n  return (\n    <Layout location={props.location} title={\"About\"}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div\n        className=\"post-content-body sntx-post-content-body\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 1000\n      filter: { fileAbsolutePath: { regex: \"//sections/about/\" } }\n    ) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <AboutPage location={props.location} data={data} {...props} />\n    )}\n  />\n)\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = props => {\n  const path = typeof window !== \"undefined\" ? window.location.pathname : \"\"\n\n  let homeClassName = \"nav-home\"\n  let aboutClassName = \"nav-about\"\n\n  if (path.match(/\\/about/)) {\n    aboutClassName = \"nav-about nav-current\"\n    homeClassName = \"nav-home\"\n  } else if (path === \"/\") {\n    aboutClassName = \"nav-about\"\n    homeClassName = \"nav-home nav-current\"\n  }\n  console.log(\"path\", path)\n\n  const { title, children } = props\n  const [toggleNav, setToggleNav] = React.useState(false)\n  return (\n    <div className={`site-wrapper ${toggleNav ? `site-head-open` : ``}`}>\n      <header className=\"site-head\">\n        <div className=\"site-head-container\">\n          <a\n            className=\"nav-burger\"\n            href={`#`}\n            onClick={() => setToggleNav(!toggleNav)}\n          >\n            <div\n              className=\"hamburger hamburger--collapse\"\n              aria-label=\"Menu\"\n              role=\"button\"\n              aria-controls=\"navigation\"\n            >\n              <div className=\"hamburger-box\">\n                <div className=\"hamburger-inner\" />\n              </div>\n            </div>\n          </a>\n          <nav id=\"swup\" class=\"site-head-left\">\n            <ul className=\"nav\" role=\"menu\">\n              <li className={homeClassName} role=\"menuitem\">\n                <Link to={`/`}>Home</Link>\n              </li>\n              <li className={aboutClassName} role=\"menuitem\">\n                <Link to={`/about`}>About</Link>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"site-head-center\">\n            <Link className=\"site-head-logo\" to={`/`}>\n              {title}\n            </Link>\n          </div>\n          <div className=\"site-head-right\">\n            <div className=\"social-links\">\n              <a\n                href=\"https://github.com/sntx\"\n                title=\"GitHub\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                GitHub\n              </a>\n              <a\n                href=\"https://twitter.com/sntx_dev\"\n                title=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Twitter\n              </a>\n            </div>\n          </div>\n        </div>\n      </header>\n      <main id=\"site-main\" className=\"site-main\">\n        <div id=\"swup\" className=\"transition-fade\">\n          {children}\n        </div>\n      </main>\n      <footer className=\"site-foot\">\n        &copy; {new Date().getFullYear()} <Link to={`/`}>{title}</Link>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}