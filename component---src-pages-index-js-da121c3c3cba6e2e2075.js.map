{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["postCard","props","react_default","a","createElement","className","postClass","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","gatsby_browser_entry","to","fields","slug","BlogIndex","_ref","location","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","postCounter","layout","seo","keywords","description","projectsTitle","map","_ref2","key","count","__webpack_exports__","query","render","pages_BlogIndex","Object","assign","_3193790952","m","module","exports","require","default","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","Layout","path","window","pathname","homeClassName","aboutClassName","match","console","log","_React$useState","useState","toggleNav","setToggleNav","react__WEBPACK_IMPORTED_MODULE_1___default","href","onClick","aria-label","role","aria-controls","id","class","gatsby__WEBPACK_IMPORTED_MODULE_2__","target","rel","Date","getFullYear","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","shape","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-da121c3c3cba6e2e2075.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default props => (\n  <article\n    className={`post-card ${props.postClass} ${\n      props.node.frontmatter.thumbnail ? `with-image` : `no-image`\n    }`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n    <Link to={props.node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\" />\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"All posts\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      {/* <Bio /> */}\n      <header className=\"page-head\">\n        <h2 className=\"page-head-title\">\n          {data.site.siteMetadata.description}\n        </h2>\n        <p className=\"sntx-page-head-title-line2\">\n          {data.site.siteMetadata.projectsTitle}\n        </p>\n      </header>\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        projectsTitle\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"//blog//\" } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = props => {\n  const path = typeof window !== \"undefined\" ? window.location.pathname : \"\"\n\n  let homeClassName = \"nav-home\"\n  let aboutClassName = \"nav-about\"\n\n  if (path.match(/\\/about/)) {\n    aboutClassName = \"nav-about nav-current\"\n    homeClassName = \"nav-home\"\n  } else if (path === \"/\") {\n    aboutClassName = \"nav-about\"\n    homeClassName = \"nav-home nav-current\"\n  }\n  console.log(\"path\", path)\n\n  const { title, children } = props\n  const [toggleNav, setToggleNav] = React.useState(false)\n  return (\n    <div className={`site-wrapper ${toggleNav ? `site-head-open` : ``}`}>\n      <header className=\"site-head\">\n        <div className=\"site-head-container\">\n          <a\n            className=\"nav-burger\"\n            href={`#`}\n            onClick={() => setToggleNav(!toggleNav)}\n          >\n            <div\n              className=\"hamburger hamburger--collapse\"\n              aria-label=\"Menu\"\n              role=\"button\"\n              aria-controls=\"navigation\"\n            >\n              <div className=\"hamburger-box\">\n                <div className=\"hamburger-inner\" />\n              </div>\n            </div>\n          </a>\n          <nav id=\"swup\" class=\"site-head-left\">\n            <ul className=\"nav\" role=\"menu\">\n              <li className={homeClassName} role=\"menuitem\">\n                <Link to={`/`}>Home</Link>\n              </li>\n              <li className={aboutClassName} role=\"menuitem\">\n                <Link to={`/about`}>About</Link>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"site-head-center\">\n            <Link className=\"site-head-logo\" to={`/`}>\n              {title}\n            </Link>\n          </div>\n          <div className=\"site-head-right\">\n            <div className=\"social-links\">\n              <a\n                href=\"https://github.com/sntx\"\n                title=\"GitHub\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                GitHub\n              </a>\n              <a\n                href=\"https://twitter.com/sntx_dev\"\n                title=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Twitter\n              </a>\n            </div>\n          </div>\n        </div>\n      </header>\n      <main id=\"site-main\" className=\"site-main\">\n        <div id=\"swup\" className=\"transition-fade\">\n          {children}\n        </div>\n      </main>\n      <footer className=\"site-foot\">\n        &copy; {new Date().getFullYear()} <Link to={`/`}>{title}</Link>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}